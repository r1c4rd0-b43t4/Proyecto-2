package UI;

import Main.*;
import javax.swing.JOptionPane;

/**
 *Clase UI_BusquedaGeneracion JForm.
 * 
 */
public class UI_BusquedaGeneracion extends javax.swing.JFrame {
    static HashTable hashTableT;
    static Arbol arbolPrincipal;
    static Arbol subArbol;
    static ListaSimple lista_personas;
    static ListaSimple personas;
    
    /**
     * Creates new form BusquedaNombre.
     * @param hashTableT_Param
     * @param arbolPrincipal_Param
     */
    public UI_BusquedaGeneracion(HashTable hashTableT_Param, Arbol arbolPrincipal_Param, ListaSimple personas_Param) {
        initComponents();
        hashTableT = hashTableT_Param;
        arbolPrincipal = arbolPrincipal_Param;
        personas = personas_Param;
        cargarGeneraciones();

        
    }
    
    /**
     * Método que carga las generaciones de un Arbol.
     * 
     */
    public void cargarGeneraciones() {
        int cantidadGeneraciones = obtenerCantidadGeneraciones(arbolPrincipal.getRaiz());
        for (int i = 0; i < cantidadGeneraciones; i++) {
            ComboBox.addItem("Generación " + (i + 1));
        }
    }
    
    /**
     * Método que obtiene la cantidad de generaciones en un Arbol.
     * @param nodo
     * @return 
     */
    public int obtenerCantidadGeneraciones(NodoArbol nodo) {
        if (nodo == null) {
            return 0;
        }
        int maxGeneracion = 0;
        for (NodoArbol hijo : nodo.obtenerHijos()) {
            int generacionHijo = obtenerCantidadGeneraciones(hijo);
            if (generacionHijo > maxGeneracion) {
                maxGeneracion = generacionHijo;
            }
        }
        return maxGeneracion + 1;
    }
    
    /**
     * Método que obtiene los integrantes que pertenecen a una generación.
     * @param nodo
     * @param generacion
     * @return 
     */
    public ListaSimple<Persona> obtenerIntegrantesGeneracion(NodoArbol nodo, int generacion) {
        ListaSimple<Persona> lista = new ListaSimple<>();
        obtenerIntegrantesGeneracion(nodo, generacion, 0, lista);
        return lista;
    }
    
    /**
     * Método que obtiene los integrantes de una generación pero de una generacion especificada.
     * @param nodo
     * @param generacionObjetivo
     * @param generacionActual
     * @param lista 
     */
    public void obtenerIntegrantesGeneracion(NodoArbol nodo, int generacionObjetivo, int generacionActual, ListaSimple<Persona> lista) {
        if (nodo == null) {
            return;
        }
        if (generacionActual == generacionObjetivo) {
            lista.insertarAlFinal(nodo.getPersona());
        }
        for (NodoArbol hijo : nodo.obtenerHijos()) {
            obtenerIntegrantesGeneracion(hijo, generacionObjetivo, generacionActual + 1, lista);
        }
    }
    
    
    

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Atras = new javax.swing.JButton();
        ComboBox = new javax.swing.JComboBox<>();
        VerIntegrantes = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Lista de integrantes de una generación");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, -1, -1));

        Atras.setBackground(new java.awt.Color(204, 204, 204));
        Atras.setFont(new java.awt.Font("SansSerif", 2, 18)); // NOI18N
        Atras.setForeground(new java.awt.Color(0, 0, 0));
        Atras.setText("Atrás");
        Atras.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Atras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtrasActionPerformed(evt);
            }
        });
        getContentPane().add(Atras, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 70, 40));
        getContentPane().add(ComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 250, 40));

        VerIntegrantes.setBackground(new java.awt.Color(204, 204, 204));
        VerIntegrantes.setFont(new java.awt.Font("SansSerif", 2, 18)); // NOI18N
        VerIntegrantes.setForeground(new java.awt.Color(0, 0, 0));
        VerIntegrantes.setText("Ver integrantes");
        VerIntegrantes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        VerIntegrantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerIntegrantesActionPerformed(evt);
            }
        });
        getContentPane().add(VerIntegrantes, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, 130, 40));

        jLabel3.setFont(new java.awt.Font("SansSerif", 2, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Seleccione una generación");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/fondo.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Botón para visualizar los integrantes de una generación en un ComboBox.
     * @param evt 
     */
    private void VerIntegrantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerIntegrantesActionPerformed
         try {
            int generacionSeleccionada = ComboBox.getSelectedIndex();
            ListaSimple<Persona> integrantesGeneracion = obtenerIntegrantesGeneracion(arbolPrincipal.getRaiz(), generacionSeleccionada);
            StringBuilder mensaje = new StringBuilder();
            Nodo<Persona> nodo = integrantesGeneracion.getpFirst();
            while (nodo != null) {
                Persona persona = nodo.getValor();
                mensaje.append(persona.getNombre()+"\n");
                nodo = nodo.getSiguiente();
            }
            JOptionPane.showMessageDialog(this, mensaje.toString(), "Integrantes de la Generación " + (generacionSeleccionada + 1), JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una generación, intente nuevamente.");
        }
                                                  

    }//GEN-LAST:event_VerIntegrantesActionPerformed

    /**
     * Botón para volver al menú principal
     * @param evt 
     */
    private void AtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtrasActionPerformed
        this.setVisible(false);
        UI_Menu_Principal ui = new UI_Menu_Principal(personas, hashTableT, arbolPrincipal);
        ui.setLocationRelativeTo(null);
        ui.setVisible(true);
    }//GEN-LAST:event_AtrasActionPerformed

    /**
     * Main UI.
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI_BusquedaGeneracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI_BusquedaGeneracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI_BusquedaGeneracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI_BusquedaGeneracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI_BusquedaGeneracion(hashTableT, arbolPrincipal, personas).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Atras;
    private javax.swing.JComboBox<String> ComboBox;
    private javax.swing.JButton VerIntegrantes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
